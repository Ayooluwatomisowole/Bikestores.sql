CREATE DATABASE Bikestore

-- DATA CLEANING 

-- Create staff table 

CREATE TABLE dbo.staff( 
    staff_id TINYINT PRIMARY KEY,
    first_name NVARCHAR(50),
    last_name  NVARCHAR(50),
    email      NVARCHAR(50),
    phone      NVARCHAR(50),
    active     TINYINT,
    store_id   TINYINT,
    manager_id TINYINT 
)

INSERT INTO [dbo].[staff]( [staff_id], [first_name],
[last_name], [email], [phone],[active], [store_id], [manager_id])
VALUES (1, 'Fabiola', 'Jackson', 'fabiola.jackson@bikes.shop', '(831) 555-5554', 1, 1, 2),
    (2, 'Mireya', 'Copeland', 'mireya.copeland@bikes.shop', '(831) 555-5555', 1, 1, 1),
    (3, 'Genna', 'Serrano', 'genna.serrano@bikes.shop', '(831) 555-5556', 1, 1, 2),
    (4, 'Virgie', 'Wiggins', 'virgie.wiggins@bikes.shop', '(831) 555-5557', 1, 1, 2),
    (5, 'Jannette', 'David', 'jannette.david@bikes.shop', '(516) 379-4444', 1, 2, 1),
    (6, 'Marcelene', 'Boyer', 'marcelene.boyer@bikes.shop', '(516) 379-4445', 1, 2, 5),
    (7, 'Venita', 'Daniel', 'venita.daniel@bikes.shop', '(516) 379-4446', 1, 2, 5),
    (8, 'Kali', 'Vargas', 'kali.vargas@bikes.shop', '(972) 530-5555', 1, 3, 1),
    (9, 'Layla', 'Terrell', 'layla.terrell@bikes.shop', '(972) 530-5556', 1, 3, 7),
    (10, 'Bernardine', 'Houston', 'bernardine.houston@bikes.shop', '(972) 530-5557', 1, 3, 7);


    -- Add 'joined date' column to staff table 
    -- Use case statement to add staff joined date to  staff table

    ALTER TABLE staff
    ADD joined_date DATE;

    SELECT *
    FROM staff

    UPDATE staff
    SET joined_date = 
    CASE staff_id
        WHEN 1 THEN '2019-01-01'
        WHEN 2 THEN '2022-01-05'
        WHEN 3 THEN '2022-01-10'
        WHEN 4 THEN '2021-01-15'
        WHEN 5 THEN '2019-01-20'
        WHEN 6 THEN '2020-01-25'
        WHEN 7 THEN '2022-01-30'
        WHEN 8 THEN '2023-02-01'
        WHEN 9 THEN '2024-02-01'
        WHEN 10 THEN '2022-02-10'
        ELSE 'unknown'
        END




-- Update null values from customer table 
Select * from dbo.customers
UPDATE dbo.customers
SET phone= 'unknown'
WHERE phone = 'NULL'

-- Update customer table 
-- Using drop column query, DROP COLUMN for shipped date as values are redundant

SELECT * FROM dbo.orders
ALTER TABLE dbo.orders
DROP COLUMN shipped_date 

-- Drop brand name from products table
-- Using drop column query

SELECT * FROM dbo.products
ALTER TABLE dbo.products
DROP COLUMN brand_name 




-- DATA EXPLORATION 

-- Number of products associated with each brand by id
SELECT brand_id, COUNT(*) AS product_count
FROM products
GROUP BY brand_id
ORDER BY product_count DESC

-- Number of products in each category 

SELECT category_id, COUNT(*) AS product_count
FROM products
GROUP BY category_id
    
  
-- Total sales revenue generated by products in each category
-- Using ROUND, SUM, JOIN on multiple tables

SELECT c.category_name, ROUND(SUM(oi.quantity * p.list_price), 2) AS total_revenue
FROM categories c
JOIN products p
    ON c.category_id = p.category_id
JOIN order_items oi
    ON p.product_id = oi.product_id
GROUP BY c.category_name

-- Total number of products placed by each customer
-- Using subquery or conventional select statement

SELECT customer_id, COUNT(DISTINCT order_id) total_orders
FROM orders
WHERE order_id IN ( 
    SELECT order_id
    FROM orders)
GROUP BY customer_id

SELECT customer_id, COUNT(DISTINCT order_id) AS total_orders
FROM orders
GROUP BY customer_id

-- Identifying co-occurrence of products in customer transactions 
-- Instrumental in recommending complimentary products to customers

SELECT
    oi1.product_id AS product_id1,
    oi2.product_id AS product_id2,
    COUNT(*) AS co_occurrences
FROM order_items oi1
JOIN order_items oi2 
ON oi1.order_id = oi2.order_id AND oi1.product_id < oi2.product_id
GROUP BY oi1.product_id, oi2.product_id;

-- Segment customers by location of purchase
-- Using CASE statement
-- Assists marketing department in locating potential leads through consumer purchase pattern by region

SELECT
    customer_id, first_name, last_name,
    CASE
        WHEN [state] = 'NY' THEN 'East coast store'
        WHEN [state] = 'TX' THEN 'Southern store'
        WHEN [state] = 'CA' THEN 'West coast store'
        ELSE 'others'
    END AS purchase_region
FROM customers


-- Extract staff details by tenure across all stores from latest to oldest staff 

SELECT *
FROM staff
ORDER BY joined_date DESC

-- Extract staff details that have been at the company for 5 or more years 

SELECT *
FROM staff
WHERE DATEDIFF(YEAR, joined_date, GETDATE()) >= 5













